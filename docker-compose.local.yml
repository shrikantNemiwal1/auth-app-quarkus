version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: auth-postgres-local
    environment:
      POSTGRES_DB: authdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Quarkus Backend
  quarkus-service:
    build:
      context: ./quarkus-service
      dockerfile: src/main/docker/Dockerfile.jvm
    container_name: auth-quarkus-local
    environment:
      - QUARKUS_DATASOURCE_JDBC_URL=jdbc:postgresql://postgres:5432/authdb
      - QUARKUS_DATASOURCE_USERNAME=postgres
      - QUARKUS_DATASOURCE_PASSWORD=postgres
      - QUARKUS_HTTP_CORS_ORIGINS=http://localhost:3000,http://localhost
      - JAVA_OPTS=-Xmx512m
    ports:
      - "8081:8080"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  # Node.js Proxy
  node-proxy:
    build:
      context: ./node-proxy
    container_name: auth-node-local
    environment:
      - QUARKUS_URL=http://quarkus-service:8080/api
      - SESSION_SECRET=local-development-secret-key
      - NODE_ENV=development
    ports:
      - "3001:3000"
    depends_on:
      - quarkus-service
    restart: unless-stopped

  # React Frontend
  frontend:
    build:
      context: ./frontend
      args:
        - REACT_APP_API_URL=http://localhost:3001/api
      dockerfile: frontend/Dockerfile
    container_name: auth-frontend-local
    ports:
      - "3000:80"
    depends_on:
      - node-proxy
    restart: unless-stopped
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro

volumes:
  postgres_data:
